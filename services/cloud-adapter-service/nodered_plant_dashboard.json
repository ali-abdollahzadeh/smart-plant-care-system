[
  {
    "id": "mqtt_in_sensor",
    "type": "mqtt in",
    "z": "1",
    "name": "Sensor Data",
    "topic": "plant/sensor",
    "qos": "2",
    "datatype": "json",
    "broker": "mqtt_broker",
    "x": 120,
    "y": 80,
    "wires": [["plant_status_logic"]]
  },
  {
    "id": "plant_status_logic",
    "type": "function",
    "z": "1",
    "name": "Per-Plant Status Logic",
    "func": "// Store latest data per plant\nlet plantData = flow.get('plantData') || {};\nplantData[msg.payload.plant_id] = msg.payload;\nflow.set('plantData', plantData);\nmsg.plantData = plantData;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 340,
    "y": 80,
    "wires": [["fetch_plants"]]
  },
  {
    "id": "fetch_plants",
    "type": "http request",
    "z": "1",
    "name": "Get Plant Info",
    "method": "GET",
    "ret": "obj",
    "url": "http://catalogue-service:5000/plants",
    "x": 570,
    "y": 80,
    "wires": [["dashboard_logic"]]
  },
  {
    "id": "dashboard_logic",
    "type": "function",
    "z": "1",
    "name": "Dashboard Logic",
    "func": "// Combine plant info and sensor data\nlet plantData = flow.get('plantData') || {};\nlet plants = msg.payload;\nlet summary = {ok: 0, problem: 0, total: plants.length, details: []};\nlet cards = [];\nfor (let plant of plants) {\n    let data = plantData[plant.id] || {};\n    let thresholds = {}\n    try { thresholds = JSON.parse(plant.thresholds.replace(/'/g, '\"')); } catch (e) {}\n    let status = 'OK';\n    let problems = [];\n    let temp = data.temperature !== undefined ? data.temperature : 'No data yet';\n    let hum = data.humidity !== undefined ? data.humidity : 'No data yet';\n    let moist = data.soil_moisture !== undefined ? data.soil_moisture : 'No data yet';\n    if (data.temperature !== undefined && thresholds.temperature) {\n        if (data.temperature < thresholds.temperature.min || data.temperature > thresholds.temperature.max) {\n            status = 'Problem';\n            problems.push('Temperature');\n        }\n    }\n    if (data.humidity !== undefined && thresholds.humidity) {\n        if (data.humidity < thresholds.humidity.min || data.humidity > thresholds.humidity.max) {\n            status = 'Problem';\n            problems.push('Humidity');\n        }\n    }\n    if (data.soil_moisture !== undefined && thresholds.soil_moisture) {\n        if (data.soil_moisture < thresholds.soil_moisture.min) {\n            status = 'Problem';\n            problems.push('Soil Moisture');\n        }\n    }\n    if (status === 'OK') summary.ok++;\n    else summary.problem++;\n    summary.details.push({name: plant.name, status, problems, location: plant.location});\n    cards.push({\n        id: plant.id,\n        name: plant.name,\n        species: plant.species,\n        location: plant.location,\n        temperature: temp,\n        humidity: hum,\n        soil_moisture: moist,\n        status,\n        problems\n    });\n}\nflow.set('dashboard_cards', cards);\nmsg.cards = cards;\nmsg.summary = summary;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 800,
    "y": 80,
    "wires": [["ui_summary","ui_cards"]]
  },
  {
    "id": "ui_summary",
    "type": "ui_text",
    "z": "1",
    "group": "dashboard_group",
    "order": 1,
    "width": 6,
    "height": 1,
    "name": "Summary",
    "label": "Plant Health Summary",
    "format": "{{msg.summary.ok}} OK, {{msg.summary.problem}} Need Attention ({{msg.summary.total}} total)",
    "layout": "row-spread",
    "x": 1050,
    "y": 60,
    "wires": []
  },
  {
    "id": "ui_cards",
    "type": "ui_template",
    "z": "1",
    "group": "dashboard_group",
    "name": "Plant Cards",
    "order": 2,
    "width": 12,
    "height": 8,
    "format": "<div ng-repeat=\"card in msg.cards\" style=\"margin-bottom: 10px; border: 2px solid {{card.status === 'OK' ? 'green' : 'red'}}; border-radius: 8px; padding: 10px; background: {{card.status === 'OK' ? '#eaffea' : '#ffeaea'}};\">\n  <b>{{card.name}}</b> ({{card.species}}) <i>at {{card.location}}</i><br>\n  <b>Status:</b> <span style=\"color: {{card.status === 'OK' ? 'green' : 'red'}}\">{{card.status}}</span>\n  <span ng-if=\"card.problems.length\"> - Problem: {{card.problems.join(', ')}}</span><br>\n  <b>Temperature:</b> {{card.temperature}}<br>\n  <b>Humidity:</b> {{card.humidity}}<br>\n  <b>Soil Moisture:</b> {{card.soil_moisture}}<br>\n</div>",
    "storeOutMessages": true,
    "fwdInMessages": true,
    "resendOnRefresh": true,
    "templateScope": "local",
    "x": 1050,
    "y": 100,
    "wires": []
  },
  {
    "id": "mqtt_broker",
    "type": "mqtt-broker",
    "name": "MQTT Broker",
    "broker": "mqtt-broker",
    "port": "1883",
    "clientid": "nodered-dashboard",
    "usetls": false,
    "compatmode": false,
    "keepalive": "60",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "closeTopic": "",
    "closePayload": "",
    "willTopic": "",
    "willQos": "0",
    "willPayload": ""
  },
  {
    "id": "dashboard_group",
    "type": "ui_group",
    "name": "Plant Dashboard",
    "tab": "dashboard_tab",
    "order": 1,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "dashboard_tab",
    "type": "ui_tab",
    "name": "Smart Plant Care",
    "icon": "dashboard",
    "order": 1
  }
] 